#! /bin/sh

export LD_LIBRARY_PATH=/usr/qt/lib:/usr/SoundSwitch/libraries

# see SoundSwitchDoc.cpp function LoadLightingTrack() in SoundSwitch project
# and SoundSwitchPrivate.cpp in Planck project

dynamic=/media/az01-internal/SoundSwitchData/dynamic

function start() {
    /usr/SoundSwitch/Scripts/SoundSwitch &
    echo "$!" > /tmp/soundswitch.pid
}

function check_new_source() {
    # if new directory is a soft link and
    #  * valid: backup previous folder and then direct external data access
    #  * invalid: remove soft link and move on
    if [ -L ${dynamic}.new ]; then
        af="$(readlink ${dynamic}.new)"
        # soft link is valid
        if [ -e ${dynamic}.new ]; then
            if [ -L ${dynamic} ]; then
                echo "********* Remove previous folder (soft link)*********"
                rm -rf ${dynamic}
            elif [ -d ${dynamic} ]; then
                echo "********* Backup previous folder *********"
                rm -rf ${dynamic}.backup
                mv ${dynamic} ${dynamic}.backup
            fi
            echo "********* Running with actual data folder $af *********"
            mv ${dynamic}.new ${dynamic}
            start
            exit 0
        fi
        # not valid
        echo "********* Remove invalid data folder (soft link): $af *********"
        rm -rf ${dynamic}.new
    fi

    # if new directory exists and not a soft link,
    # it's copied from external drive, override folder and use it
    if [ -d ${dynamic}.new ]; then
        echo "********* Override SoundSwitch folder *********"
        rm -rf ${dynamic}
        mv ${dynamic}.new ${dynamic}
        start
        exit 0
    fi
}

function check_current_source() {
    # if current data folder is a soft link
    if [ -L ${dynamic} ]; then
        af="$(readlink ${dynamic})"
        if [ -e ${dynamic} ]; then
            echo "********* Running with actual data folder $af *********"
            start
            exit 0
        fi
        # soft link is not valid anymore
        echo "********* Remove invalid data folder (soft link): $af *********"
        rm -rf ${dynamic}
    fi

    # if current data folder is not a soft link
    if [ -d ${dynamic} ]; then
        start
        exit 0
    fi
}

function fall_back() {
    if [ -L ${dynamic}.backup ]; then
        echo "********* Remove backup folder (soft link) *********"
        rm -rf {dynamic}.backup
    elif [ -d ${dynamic}.backup ]; then
        echo "********* Running with previous folder *********"
        mv ${dynamic}.backup ${dynamic}
        start
        exit 0
    fi

    echo "********* No data folder found, using factory default *********"

    rm -rf ${dynamic};
    mkdir -p ${dynamic}
    cp -a /usr/SoundSwitch/SharedSupport/default.ssproj/* ${dynamic}
    start
    exit 0
}

check_new_source
check_current_source
fall_back
